version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - kafkaNet
  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - "9092:9092"
    networks:
      - kafkaNet
    links:
      - zookeeper
    environment:
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092

      #      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ADVERTISED_HOST_NAME: localhost
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_ADVERTISED_HOST_NAME: 172.30.0.3
#      KAFKA_ZOOKEEPER_CONNECT: 172.30.0.2:2181
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "notification_request:1:1,cloud_storage_token_mng:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # local mongo server
  mongodb-server:
    image: mongo:4.2.3
    restart: always
    ports: # expose port to localhost for debugging
      - 27017:27017
    networks:
      db:
        aliases:
          - mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: dbuser
      MONGO_INITDB_ROOT_PASSWORD: dbpass

  # init container to load mongo dumps to local container
  mongodb-seed:
    image: mongo:4.2.3
    volumes:
      - ../config/mongodb/mongo-seed:/mongo-seed
    command: /mongo-seed/import.sh
    depends_on:
      - mongodb-server
    networks:
      - db
    environment:
      - DB_NAME=givers_test
      - MONGO_USER=dbuser
      - MONGO_PASSWORD=dbpass

  sp-server:
    depends_on:
      - mongodb-seed
      - kafka
    build:
      context: ../../../sp-server
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000 # expose port to localhost for debugging
      - 56755:56755
    volumes:
     - ../../../sp-server/:/app/
     - /app/node_modules
    networks:
      - db
      - kafkaNet
#      api:
#        ipv4_address: 172.30.0.5
    env_file:
      - ../../../sp-server/.env # read twilio/paypal secrets from secret file
    environment:
      ## env vars to inject to api server
      ## ENVIRONMENT
      - NODE_ENV=development
#volumes:
#  chatembeddata:
#  esdata:

networks:
  db:
  kafkaNet:
#  api:
#    ipam:
#      config:
#          - subnet: 172.30.0.0/24
##  api:
#  elk:
